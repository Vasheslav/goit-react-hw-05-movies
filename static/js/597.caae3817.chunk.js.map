{"version":3,"file":"static/js/597.caae3817.chunk.js","mappings":"uMAwDA,UAnDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,WAEVE,EAAAA,EAAAA,IAAA,6CAE0CR,EAF1C,qEAIGS,MAAK,SAAAC,GACJN,EAAQM,EAAIC,KAAKR,MACjBG,EAAU,WACX,IACAM,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACb,IAIJ,MAAe,YAAXK,GACK,SAAC,IAAD,IAGM,aAAXA,GAAyC,IAAhBF,EAAKY,QACzB,uBAAG,wCAGG,aAAXV,GAAyBF,EAAKY,OAAS,GAEvC,wBACGZ,EAAKa,KAAI,SAAAC,GAAI,OACZ,0BACGA,EAAKC,eACJ,gBACEC,IAAG,UAjBK,8BAiBL,eAAyBF,EAAKC,cACjCE,IAAI,GACJC,MAAO,MAIX,uBAAIJ,EAAKK,QACT,uBAAIL,EAAKM,cAVFN,EAAKO,QADF,WAHpB,CAoBD,C,4ECpDYC,EAAS,WACpB,OACE,gBAAKC,MAAO,CAAEC,QAAS,QAASC,OAAQ,OAAQP,MAAO,SAAvD,UACE,SAAC,KAAD,CACEQ,SAAS,EACTC,OAAO,MACPT,MAAM,MACNU,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAIb,C","sources":["components/Cast.jsx","components/Loader.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=010a12c35498ee121131bb88bb81731c&language=en-US`\n      )\n      .then(res => {\n        setCast(res.data.cast);\n        setStatus('resolved');\n      })\n      .catch(error => console.error(error));\n  }, [movieId]);\n\n  const posterBaseUrl = 'https://image.tmdb.org/t/p/';\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n\n  if (status === 'resolved' && cast.length === 0) {\n    return <p>We dont have information about cast</p>;\n  }\n\n  if (status === 'resolved' && cast.length > 0) {\n    return (\n      <ul>\n        {cast.map(item => (\n          <li key={item.cast_id}>\n            {item.profile_path && (\n              <img\n                src={`${posterBaseUrl}w200${item.profile_path}`}\n                alt=\"\"\n                width={90}\n              />\n            )}\n\n            <p>{item.name}</p>\n            <p>{item.character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Cast;\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style={{ display: 'block', margin: 'auto', width: '100px' }}>\n      <MagnifyingGlass\n        visible={true}\n        height=\"100\"\n        width=\"100\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n};\n"],"names":["movieId","useParams","useState","cast","setCast","status","setStatus","useEffect","axios","then","res","data","catch","error","console","length","map","item","profile_path","src","alt","width","name","character","cast_id","Loader","style","display","margin","visible","height","ariaLabel","wrapperStyle","wrapperClass","glassColor","color"],"sourceRoot":""}